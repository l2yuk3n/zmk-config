#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define CMK 0
#define NUM 1
#define NAV 2
#define FUN 3

// #define BT(n) BT_SEL n

// &lt {
//     quick_tap_ms = <170>;
// };

&caps_word {
    continue-list = <UNDERSCORE MINUS BSPC LSHFT RSHFT>;
};

/ {
    macros {
        macro_sch: macro_sch {
            label = "Macro_SCH";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&macro_tap &kp S &kp C &kp H>;
        };
    };
};

#define COMBO(NAME, BINDINGS, KEYPOS) \
combo_##NAME { \
    timeout-ms = <20>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
};

#define COMBO_LAY(NAME, BINDINGS, KEYPOS, LAYERS) \
combo_##NAME { \
    timeout-ms = <20>; \
    bindings = <BINDINGS>; \
    key-positions = <KEYPOS>; \
    layers = <LAYERS>; \
};

/ {
    combos {
        compatible = "zmk,combos";
/* usually on base layer */
        COMBO_LAY(q, &kp Q, 0 1, 0)
        COMBO_LAY(j, &kp J, 4 5, 0)
        COMBO_LAY(v, &kp V, 12 21, 0)
        COMBO_LAY(semi, &my_lt NUM SEMI, 6 7, 0)
        COMBO_LAY(gui, &hm LGUI SQT, 21 26, 0)
        COMBO_LAY(tab, &kp TAB, 8 9, 0)
/* ALL layer */
        COMBO(esc, &kp ESC, 0 8)
/* Number Layer Specials */
        COMBO_LAY(dash, &kp MINUS, 22 23, 1)
        COMBO_LAY(, &kp V, 12 21, 0)
        COMBO_LAY(v, &kp V, 12 21, 0)
/* NAV Layer Specials */
        COMBO_LAY(aster, &kp KP_ASTERISK, 4 13, 2)
        COMBO_LAY(num0, &kp KP_N0, 12 22, 2)
        COMBO_LAY(numdot, &kp KP_DOT, 23 24, 2)
    };
};

//   ____________________________  ____________________________
//  /       0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7      \
// |  8  |  9  | 10  | 11  | 12  /\  13 |  14 |  15 |  16 | 17  |
// | 18  | 19  | 20  | 21       /  \       22 |  23 |  24 | 25  |
//                      \  26  /    \  27  /
//                       ------      ------

/ {

    behaviors {
        hl: homerow_mods_left {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods left";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            // flavor = "balanced";
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <4 5 6 7 13 14 15 16 17 22 23 24 25 26 27>;
        };
        hr: homerow_mods_right {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods right";
            #binding-cells = <2>;
            flavor = "tap-preferred";
            // flavor = "balanced";
            tapping-term-ms = <175>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&kp>, <&kp>;
            // opposite side hand keys
            hold-trigger-key-positions = <0 1 2 3 8 9 10 11 12 18 19 20 21 26 27>;
        };
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <175>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };

        my_lt: my_layer_taps {
            compatible = "zmk,behavior-hold-tap";
            label = "my layer taps";
            #binding-cells = <2>;
            // flavor = "tap-preferred";
            flavor = "balanced";
            tapping-term-ms = <150>;
            quick-tap-ms = <100>;
            // global-quick-tap;
            bindings = <&mo &kp>, <&kp>;
            // non-thumb keys
            // hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25>;
        };
//   ____________________________  ____________________________
//  /       0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7      \
// |  8  |  9  | 10  | 11  | 12  /\  13 |  14 |  15 |  16 | 17  |
// | 18  | 19  | 20  | 21       /  \       22 |  23 |  24 | 25  |
//                      \  26  /    \  27  /
//                       ------      ------


        dotcol: dot_colon {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_COL";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp COLON>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
        comsem: comma_semicolon {
            compatible = "zmk,behavior-mod-morph";
            label = "COM_SEM";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp SEMI>;
            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };
};


//   ____________________________  ____________________________
//  /       0  |  1  |  2  |  3  \/   4 |   5 |   6 |   7      \
// |  8  |  9  | 10  | 11  | 12  /\  13 |  14 |  15 |  16 | 17  |
// | 19  | 19  | 20  | 21       /  \       22 |  23 |  24 | 25  |
//                      \  26  /    \  27  /
//                       ------      ------

/ {

    keymap {
        compatible = "zmk,keymap";

        colemak {
            label = "CMK";

            bindings = <
                               &kp W          &kp F          &kp P          &kp B          &kp K          &kp L          &kp U          &kp Y
                &my_lt NAV A   &kp R          &kp S          &kp T          &kp G          &kp M          &kp N          &kp E          &kp I           &kp O
                &hm LSHFT Z    &hl LCTRL X    &hl LALT C     &kp D                                        &kp H          &hr RALT DOT   &hr RCTRL COMMA &hm RSHFT FSLH
                                                                        &my_lt NUM BSPACE     &my_lt NAV SPACE
            >;
        };
        numbers {
            label = "NUM";

            bindings = <
                               &kp LT         &kp LBRC       &kp LBKT       &kp LPAR       &kp RPAR       &kp RBKT       &kp RBRC       &kp GT
                &kp N1         &kp N2         &kp N3         &kp N4         &kp N5         &kp N6         &kp N7         &kp N8         &kp N9          &kp N0
                &hm LSHFT BSLH &kp SEMI       &kp GRAVE      &kp SQT                                      &kp EQUAL      &kp DOT        &kp COMMA       &hm RSHFT FSLH
                                                                        &trans                &my_lt FUN ENTER
            >;
        };
        navigation {
            label = "NAV";

            bindings = <
                               &kp PG_UP      &kp UP         &kp HOME       &kp C_MUTE     &kp KP_MINUS   &kp KP_N7      &kp KP_N8      &kp KP_N9
                &trans         &kp LEFT       &kp DOWN       &kp RIGHT      &kp KP_NUMLOCK &kp KP_SLASH   &kp KP_N4      &kp KP_N5      &kp KP_N6       &kp KP_PLUS
                &trans         &kp PG_DN      &kp INSERT     &kp END                                      &kp KP_N1      &kp KP_N2      &kp KP_N3       &kp KP_ENTER
                                                                        &my_lt FUN DEL        &trans
            >;
        };
        function {
            label = "FUN";

            bindings = <
                               &bootloader    &trans         &trans         &kp F11        &kp F12        &trans         &dotcol        &comsem
                &kp F1         &kp F2         &kp F3         &kp F4         &kp F5         &kp F6         &kp F7         &kp F8         &kp F9          &kp F10
                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &out OUT_BLE                                 &out OUT_USB   &bt BT_PRV     &bt BT_NXT      &bt BT_CLR
                                                                        &trans                &trans
            >;
        };

    };
};
