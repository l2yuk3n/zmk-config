/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define ALP 0
#define NUM 1
#define NAV 2
#define FUN 3

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    macros {
        SECT: SECT {
            label = "SECT";
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings
				= <&macro_tap &kp N0 &kp N0 &kp N0 &kp A &kp N7>
				, <&macro_press &kp LALT>
				, <&macro_tap &kp X>
				, <&macro_release &kp LALT>
			;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        ALPHA {
            bindings = <
    &kp Q          &kp W          &kp F          &kp P          &kp B          &kp J          &kp L          &kp U          &kp Y       &lt NUM SEMI 
    &lt NAV A      &kp R          &kp S          &kp T          &kp G          &kp M          &kp N          &kp E          &kp I       &kp O
    &hm LSHFT Z    &hm LCTRL X    &hm LALT C     &kp D          &kp V          &kp K          &kp H          &hm RALT COMMA &kp RET
	&kp LCTRL      &kp LGUI       &lt 2 BSPC     &kp LGUI       &lt 1 SPACE    &kp RALT
            >;
        };
		
        NUMFN {
            bindings = <
    &kp N1     &kp N2    &kp N3    &kp N4    &kp N5     &kp N6    &kp N7           &kp N8        &kp N9         &kp N0
    &kp F1     &kp F2    &kp F3    &kp F4    &kp F5     &kp F6    &trans           &kp KP_PLUS   &kp UNDER      &kp KP_DOT
    &kp F7     &kp F8    &kp F9    &kp F10   &kp F11    &kp F12   &kp KP_ASTERISK  &kp KP_SLASH  &kp KP_EQUAL
	&kp LCTRL  &kp LALT  &kp BSPC  &kp LGUI  &kp SPACE  &kp RALT
            >;
        };
		
        SYMBL {
            bindings = <
    &kp EXCL  &kp DQT  &SECT   &kp DLLR  &kp PRCNT  &kp AMPS  &kp FSLH     &kp LPAR     &kp RPAR       &kp KP_EQUAL
    &kp CAPS  &trans   &trans  &trans    &trans     &kp NUBS  &mt RALT N7  &mt RALT N8  &mt RALT N9    &kp KP_EQUAL
    &trans    &trans   &trans  &trans    &trans     &trans    &trans       &trans       &trans
	&trans    &trans   &trans  &kp BSPC  &trans     &trans
            >;
        };
		
        NAVVL {
            bindings = <
    &trans    &kp UP    &trans     &trans   &trans  &trans      &kp PG_UP     &trans        &kp PSCRN  &kp P
    &kp LEFT  &kp DOWN  &kp RIGHT  &trans   &trans  &kp HOME    &kp PG_DN     &kp END       &kp SEMI   &kp SQT
    &trans    &trans    &trans     &trans   &trans  &kp C_MUTE  &kp C_VOL_UP  &kp C_VOL_DN  &trans
    &trans    &trans    &kp DEL    &kp INS  &trans  &trans
            >;
        };
    };
};